/**
 * Generated by orval v6.10.2 🍺
 * Do not edit manually.
 * Impakt API
 * OpenAPI spec version: 1.0.0
 */
import { rest } from 'msw';
import { faker } from '@faker-js/faker';

export const getCommunityRequestsControllerJoinMock = () => ({
  id: faker.datatype.number({ min: undefined, max: undefined }),
  name: faker.random.word(),
  description: faker.helpers.arrayElement([faker.random.word(), null]),
  ownerId: faker.helpers.arrayElement([
    faker.datatype.number({ min: undefined, max: undefined }),
    null,
  ]),
  createdAt: faker.helpers.arrayElement([
    `${faker.date.past().toISOString().split('.')[0]}Z`,
    null,
  ]),
  updatedAt: faker.helpers.arrayElement([
    `${faker.date.past().toISOString().split('.')[0]}Z`,
    null,
  ]),
  memberCount: faker.datatype.number({ min: undefined, max: undefined }),
});

export const getCommunityRequestsMSW = () => [
  rest.post('*/api/v1/community/requests/join/:id', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getCommunityRequestsControllerJoinMock()),
    );
  }),
  rest.post('*/api/v1/community/requests/leave/:id', (_req, res, ctx) => {
    return res(ctx.delay(1000), ctx.status(200, 'Mocked status'));
  }),
];
