/**
 * Generated by orval v6.10.2 🍺
 * Do not edit manually.
 * Impakt API
 * OpenAPI spec version: 1.0.0
 */
import { rest } from 'msw';
import { faker } from '@faker-js/faker';

export const getUserStreakControllerGetCurrentStreakMock = () => ({
  value: faker.datatype.number({ min: undefined, max: undefined }),
  streakedToday: faker.datatype.boolean(),
  completedAt: faker.helpers.arrayElement([
    `${faker.date.past().toISOString().split('.')[0]}Z`,
    null,
  ]),
});

export const getUserStreakControllerGetLongestStreakMock = () => ({
  value: faker.datatype.number({ min: undefined, max: undefined }),
  streakedToday: faker.datatype.boolean(),
  completedAt: faker.helpers.arrayElement([
    `${faker.date.past().toISOString().split('.')[0]}Z`,
    null,
  ]),
});

export const getStreakMSW = () => [
  rest.get('*/api/v1/fitness/streak/current/:userId', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getUserStreakControllerGetCurrentStreakMock()),
    );
  }),
  rest.get('*/api/v1/fitness/streak/longest/:userId', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getUserStreakControllerGetLongestStreakMock()),
    );
  }),
];
