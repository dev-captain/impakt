/**
 * Generated by orval v6.10.2 🍺
 * Do not edit manually.
 * Impakt API
 * OpenAPI spec version: 1.0.0
 */
import { rest } from 'msw';
import { faker } from '@faker-js/faker';

export const getCalendarControllerGetCalendarListViewMock = () => ({
  id: faker.datatype.number({ min: undefined, max: undefined }),
  Events: Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
    () => ({
      id: faker.datatype.number({ min: undefined, max: undefined }),
      visible: faker.datatype.boolean(),
      data: {
        id: faker.datatype.number({ min: undefined, max: undefined }),
        title: faker.random.word(),
        description: faker.helpers.arrayElement([faker.random.word(), null]),
        creatorId: faker.datatype.number({ min: undefined, max: undefined }),
        parentEventId: faker.helpers.arrayElement([
          faker.datatype.number({ min: undefined, max: undefined }),
          null,
        ]),
        assocId: faker.helpers.arrayElement([
          faker.datatype.number({ min: undefined, max: undefined }),
          null,
        ]),
        createdAt: `${faker.date.past().toISOString().split('.')[0]}Z`,
      },
      schedule: {
        start: `${faker.date.past().toISOString().split('.')[0]}Z`,
        end: `${faker.date.past().toISOString().split('.')[0]}Z`,
        maxOccurrences: faker.helpers.arrayElement([
          faker.datatype.number({ min: undefined, max: undefined }),
          null,
        ]),
        cancel: Array.from(
          { length: faker.datatype.number({ min: 1, max: 10 }) },
          (_, i) => i + 1,
        ).map(() => `${faker.date.past().toISOString().split('.')[0]}Z`),
        exclude: Array.from(
          { length: faker.datatype.number({ min: 1, max: 10 }) },
          (_, i) => i + 1,
        ).map(() => `${faker.date.past().toISOString().split('.')[0]}Z`),
        dayOfWeek: Array.from(
          { length: faker.datatype.number({ min: 1, max: 10 }) },
          (_, i) => i + 1,
        ).map(() => faker.datatype.number({ min: undefined, max: undefined })),
      },
    }),
  ),
  type: faker.helpers.arrayElement(['Personal', 'Group']),
});

export const getCalendarEventsListModelMSW = () => [
  rest.get('*/api/v1/calendar/calendar/:calendarId/list', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getCalendarControllerGetCalendarListViewMock()),
    );
  }),
];
