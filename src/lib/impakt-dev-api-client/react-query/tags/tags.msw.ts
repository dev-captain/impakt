/**
 * Generated by orval v6.10.2 🍺
 * Do not edit manually.
 * Impakt API
 * OpenAPI spec version: 1.0.0
 */
import { rest } from 'msw';
import { faker } from '@faker-js/faker';

export const getTagsControllerGetTagsMock = () =>
  Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
    id: faker.datatype.number({ min: undefined, max: undefined }),
    createdAt: `${faker.date.past().toISOString().split('.')[0]}Z`,
    value: faker.random.word(),
    availableFor: faker.helpers.arrayElement(['Challenges', 'Routines']),
  }));

export const getTagsControllerAddTagMock = () =>
  Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
    id: faker.datatype.number({ min: undefined, max: undefined }),
    createdAt: `${faker.date.past().toISOString().split('.')[0]}Z`,
    value: faker.random.word(),
    availableFor: faker.helpers.arrayElement(['Challenges', 'Routines']),
  }));

export const getTagsControllerRemoveTagMock = () => ({
  id: faker.datatype.number({ min: undefined, max: undefined }),
  createdAt: `${faker.date.past().toISOString().split('.')[0]}Z`,
  value: faker.random.word(),
  availableFor: faker.helpers.arrayElement(['Challenges', 'Routines']),
});

export const getTagsMSW = () => [
  rest.get('*/api/v1/common/tags', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getTagsControllerGetTagsMock()),
    );
  }),
  rest.post('*/api/v1/common/tags', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getTagsControllerAddTagMock()),
    );
  }),
  rest.delete('*/api/v1/common/tags/:id', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getTagsControllerRemoveTagMock()),
    );
  }),
];
