/**
 * Generated by orval v6.10.2 🍺
 * Do not edit manually.
 * Impakt API
 * OpenAPI spec version: 1.0.0
 */
import { rest } from 'msw';
import { faker } from '@faker-js/faker';

export const getFitnessStatsControllerGetCurrentStreakMock = () => ({
  value: faker.datatype.number({ min: undefined, max: undefined }),
  streakedToday: faker.datatype.boolean(),
  completedAt: faker.helpers.arrayElement([
    `${faker.date.past().toISOString().split('.')[0]}Z`,
    null,
  ]),
});

export const getFitnessStatsControllerGetLongestStreakMock = () => ({
  value: faker.datatype.number({ min: undefined, max: undefined }),
  streakedToday: faker.datatype.boolean(),
  completedAt: faker.helpers.arrayElement([
    `${faker.date.past().toISOString().split('.')[0]}Z`,
    null,
  ]),
});

export const getFitnessStatsControllerGetDaysActiveMock = () => ({
  value: faker.datatype.number({ min: undefined, max: undefined }),
});

export const getFitnessStatsControllerGetAverageActiveTimePerDayMock = () => ({
  value: faker.datatype.number({ min: undefined, max: undefined }),
});

export const getFitnessStatsControllerGetExerciseStatsMock = () => ({
  exerciseStats: Array.from(
    { length: faker.datatype.number({ min: 1, max: 10 }) },
    (_, i) => i + 1,
  ).map(() => faker.random.word()),
});

export const getFitnessStatsMSW = () => [
  rest.get('*/api/v1/stats/fitness/:userId/streak/current', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getFitnessStatsControllerGetCurrentStreakMock()),
    );
  }),
  rest.get('*/api/v1/stats/fitness/:userId/streak/longest', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getFitnessStatsControllerGetLongestStreakMock()),
    );
  }),
  rest.get('*/api/v1/stats/fitness/:userId/days-active', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getFitnessStatsControllerGetDaysActiveMock()),
    );
  }),
  rest.get('*/api/v1/stats/fitness/:userId/average-activity', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getFitnessStatsControllerGetAverageActiveTimePerDayMock()),
    );
  }),
  rest.get('*/api/v1/stats/fitness/:userId/exercise', (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getFitnessStatsControllerGetExerciseStatsMock()),
    );
  }),
];
